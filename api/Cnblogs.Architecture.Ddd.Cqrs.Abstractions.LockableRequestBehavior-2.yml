### YamlMime:ManagedReference
items:
- uid: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2
  commentId: T:Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2
  id: LockableRequestBehavior`2
  parent: Cnblogs.Architecture.Ddd.Cqrs.Abstractions
  children:
  - Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2.#ctor(Cnblogs.Architecture.Ddd.Infrastructure.Abstractions.IDistributedLockProvider,Microsoft.Extensions.Logging.ILogger{Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior{`0,`1}})
  - Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2.Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: LockableRequestBehavior<TRequest, TResponse>
  nameWithType: LockableRequestBehavior<TRequest, TResponse>
  fullName: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior<TRequest, TResponse>
  type: Class
  source:
    remote:
      path: src/Cnblogs.Architecture.Ddd.Cqrs.Abstractions/LockableRequestBehavior.cs
      branch: add-docfx
      repo: https://github.com/cnblogs/Architecture.git
    id: LockableRequestBehavior
    path: src/Cnblogs.Architecture.Ddd.Cqrs.Abstractions/LockableRequestBehavior.cs
    startLine: 13
  assemblies:
  - Cnblogs.Architecture.Ddd.Cqrs.Abstractions
  namespace: Cnblogs.Architecture.Ddd.Cqrs.Abstractions
  summary: Handle requests that require distributed lock.
  example: []
  syntax:
    content: 'public class LockableRequestBehavior<TRequest, TResponse> : IPipelineBehavior<TRequest, TResponse> where TRequest : ILockableRequest, IRequest<TResponse> where TResponse : ILockableResponse, new()'
    typeParameters:
    - id: TRequest
      description: The type of request.
    - id: TResponse
      description: The type of response.
    content.vb: Public Class LockableRequestBehavior(Of TRequest As {ILockableRequest, IRequest(Of TResponse)}, TResponse As {ILockableResponse, New}) Implements IPipelineBehavior(Of TRequest, TResponse)
  inheritance:
  - System.Object
  implements:
  - MediatR.IPipelineBehavior{{TRequest},{TResponse}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: LockableRequestBehavior(Of TRequest, TResponse)
  fullName.vb: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior(Of TRequest, TResponse)
  name.vb: LockableRequestBehavior(Of TRequest, TResponse)
- uid: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2.#ctor(Cnblogs.Architecture.Ddd.Infrastructure.Abstractions.IDistributedLockProvider,Microsoft.Extensions.Logging.ILogger{Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior{`0,`1}})
  commentId: M:Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2.#ctor(Cnblogs.Architecture.Ddd.Infrastructure.Abstractions.IDistributedLockProvider,Microsoft.Extensions.Logging.ILogger{Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior{`0,`1}})
  id: '#ctor(Cnblogs.Architecture.Ddd.Infrastructure.Abstractions.IDistributedLockProvider,Microsoft.Extensions.Logging.ILogger{Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior{`0,`1}})'
  parent: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2
  langs:
  - csharp
  - vb
  name: LockableRequestBehavior(IDistributedLockProvider, ILogger<LockableRequestBehavior<TRequest, TResponse>>)
  nameWithType: LockableRequestBehavior<TRequest, TResponse>.LockableRequestBehavior(IDistributedLockProvider, ILogger<LockableRequestBehavior<TRequest, TResponse>>)
  fullName: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior<TRequest, TResponse>.LockableRequestBehavior(Cnblogs.Architecture.Ddd.Infrastructure.Abstractions.IDistributedLockProvider, Microsoft.Extensions.Logging.ILogger<Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior<TRequest, TResponse>>)
  type: Constructor
  source:
    remote:
      path: src/Cnblogs.Architecture.Ddd.Cqrs.Abstractions/LockableRequestBehavior.cs
      branch: add-docfx
      repo: https://github.com/cnblogs/Architecture.git
    id: .ctor
    path: src/Cnblogs.Architecture.Ddd.Cqrs.Abstractions/LockableRequestBehavior.cs
    startLine: 25
  assemblies:
  - Cnblogs.Architecture.Ddd.Cqrs.Abstractions
  namespace: Cnblogs.Architecture.Ddd.Cqrs.Abstractions
  summary: Create a new <xref href="Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior%602" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public LockableRequestBehavior(IDistributedLockProvider distributedLockProvider, ILogger<LockableRequestBehavior<TRequest, TResponse>> logger)
    parameters:
    - id: distributedLockProvider
      type: Cnblogs.Architecture.Ddd.Infrastructure.Abstractions.IDistributedLockProvider
      description: Distributed lock provider.
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2}
      description: log provider.
    content.vb: Public Sub New(distributedLockProvider As IDistributedLockProvider, logger As ILogger(Of LockableRequestBehavior(Of TRequest, TResponse)))
  overload: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2.#ctor*
  nameWithType.vb: LockableRequestBehavior(Of TRequest, TResponse).New(IDistributedLockProvider, ILogger(Of LockableRequestBehavior(Of TRequest, TResponse)))
  fullName.vb: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior(Of TRequest, TResponse).New(Cnblogs.Architecture.Ddd.Infrastructure.Abstractions.IDistributedLockProvider, Microsoft.Extensions.Logging.ILogger(Of Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior(Of TRequest, TResponse)))
  name.vb: New(IDistributedLockProvider, ILogger(Of LockableRequestBehavior(Of TRequest, TResponse)))
- uid: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2.Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)
  commentId: M:Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2.Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)
  id: Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)
  parent: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2
  langs:
  - csharp
  - vb
  name: Handle(TRequest, RequestHandlerDelegate<TResponse>, CancellationToken)
  nameWithType: LockableRequestBehavior<TRequest, TResponse>.Handle(TRequest, RequestHandlerDelegate<TResponse>, CancellationToken)
  fullName: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior<TRequest, TResponse>.Handle(TRequest, MediatR.RequestHandlerDelegate<TResponse>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Cnblogs.Architecture.Ddd.Cqrs.Abstractions/LockableRequestBehavior.cs
      branch: add-docfx
      repo: https://github.com/cnblogs/Architecture.git
    id: Handle
    path: src/Cnblogs.Architecture.Ddd.Cqrs.Abstractions/LockableRequestBehavior.cs
    startLine: 34
  assemblies:
  - Cnblogs.Architecture.Ddd.Cqrs.Abstractions
  namespace: Cnblogs.Architecture.Ddd.Cqrs.Abstractions
  summary: Pipeline handler. Perform any additional behavior and await the <code class="paramref">next</code> delegate as necessary
  example: []
  syntax:
    content: public Task<TResponse> Handle(TRequest request, RequestHandlerDelegate<TResponse> next, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: '{TRequest}'
      description: Incoming request
    - id: next
      type: MediatR.RequestHandlerDelegate{{TResponse}}
      description: Awaitable delegate for the next action in the pipeline. Eventually this delegate represents the handler.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
      description: Awaitable task returning the <code class="typeparamref">TResponse</code>
    content.vb: Public Function Handle(request As TRequest, [next] As RequestHandlerDelegate(Of TResponse), cancellationToken As CancellationToken) As Task(Of TResponse)
  overload: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2.Handle*
  implements:
  - MediatR.IPipelineBehavior{{TRequest},{TResponse}}.Handle({TRequest},MediatR.RequestHandlerDelegate{{TResponse}},System.Threading.CancellationToken)
  nameWithType.vb: LockableRequestBehavior(Of TRequest, TResponse).Handle(TRequest, RequestHandlerDelegate(Of TResponse), CancellationToken)
  fullName.vb: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior(Of TRequest, TResponse).Handle(TRequest, MediatR.RequestHandlerDelegate(Of TResponse), System.Threading.CancellationToken)
  name.vb: Handle(TRequest, RequestHandlerDelegate(Of TResponse), CancellationToken)
references:
- uid: Cnblogs.Architecture.Ddd.Cqrs.Abstractions
  commentId: N:Cnblogs.Architecture.Ddd.Cqrs.Abstractions
  href: Cnblogs.html
  name: Cnblogs.Architecture.Ddd.Cqrs.Abstractions
  nameWithType: Cnblogs.Architecture.Ddd.Cqrs.Abstractions
  fullName: Cnblogs.Architecture.Ddd.Cqrs.Abstractions
  spec.csharp:
  - uid: Cnblogs
    name: Cnblogs
    href: Cnblogs.html
  - name: .
  - uid: Cnblogs.Architecture
    name: Architecture
    href: Cnblogs.Architecture.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd
    name: Ddd
    href: Cnblogs.Architecture.Ddd.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd.Cqrs
    name: Cqrs
    href: Cnblogs.Architecture.Ddd.Cqrs.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd.Cqrs.Abstractions
    name: Abstractions
    href: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.html
  spec.vb:
  - uid: Cnblogs
    name: Cnblogs
    href: Cnblogs.html
  - name: .
  - uid: Cnblogs.Architecture
    name: Architecture
    href: Cnblogs.Architecture.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd
    name: Ddd
    href: Cnblogs.Architecture.Ddd.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd.Cqrs
    name: Cqrs
    href: Cnblogs.Architecture.Ddd.Cqrs.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd.Cqrs.Abstractions
    name: Abstractions
    href: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MediatR.IPipelineBehavior{{TRequest},{TResponse}}
  commentId: T:MediatR.IPipelineBehavior{`0,`1}
  parent: MediatR
  definition: MediatR.IPipelineBehavior`2
  name: IPipelineBehavior<TRequest, TResponse>
  nameWithType: IPipelineBehavior<TRequest, TResponse>
  fullName: MediatR.IPipelineBehavior<TRequest, TResponse>
  nameWithType.vb: IPipelineBehavior(Of TRequest, TResponse)
  fullName.vb: MediatR.IPipelineBehavior(Of TRequest, TResponse)
  name.vb: IPipelineBehavior(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IPipelineBehavior`2
    name: IPipelineBehavior
    isExternal: true
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: MediatR.IPipelineBehavior`2
    name: IPipelineBehavior
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MediatR.IPipelineBehavior`2
  commentId: T:MediatR.IPipelineBehavior`2
  isExternal: true
  name: IPipelineBehavior<TRequest, TResponse>
  nameWithType: IPipelineBehavior<TRequest, TResponse>
  fullName: MediatR.IPipelineBehavior<TRequest, TResponse>
  nameWithType.vb: IPipelineBehavior(Of TRequest, TResponse)
  fullName.vb: MediatR.IPipelineBehavior(Of TRequest, TResponse)
  name.vb: IPipelineBehavior(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IPipelineBehavior`2
    name: IPipelineBehavior
    isExternal: true
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: MediatR.IPipelineBehavior`2
    name: IPipelineBehavior
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: )
- uid: MediatR
  commentId: N:MediatR
  href: MediatR.html
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2
  commentId: T:Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2
  href: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior-2.html
  name: LockableRequestBehavior<TRequest, TResponse>
  nameWithType: LockableRequestBehavior<TRequest, TResponse>
  fullName: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior<TRequest, TResponse>
  nameWithType.vb: LockableRequestBehavior(Of TRequest, TResponse)
  fullName.vb: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior(Of TRequest, TResponse)
  name.vb: LockableRequestBehavior(Of TRequest, TResponse)
  spec.csharp:
  - uid: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2
    name: LockableRequestBehavior
    href: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior-2.html
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2
    name: LockableRequestBehavior
    href: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: )
- uid: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2.#ctor*
  commentId: Overload:Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2.#ctor
  href: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior-2.html#Cnblogs_Architecture_Ddd_Cqrs_Abstractions_LockableRequestBehavior_2__ctor_Cnblogs_Architecture_Ddd_Infrastructure_Abstractions_IDistributedLockProvider_Microsoft_Extensions_Logging_ILogger_Cnblogs_Architecture_Ddd_Cqrs_Abstractions_LockableRequestBehavior__0__1___
  name: LockableRequestBehavior
  nameWithType: LockableRequestBehavior<TRequest, TResponse>.LockableRequestBehavior
  fullName: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior<TRequest, TResponse>.LockableRequestBehavior
  nameWithType.vb: LockableRequestBehavior(Of TRequest, TResponse).New
  fullName.vb: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior(Of TRequest, TResponse).New
  name.vb: New
- uid: Cnblogs.Architecture.Ddd.Infrastructure.Abstractions.IDistributedLockProvider
  commentId: T:Cnblogs.Architecture.Ddd.Infrastructure.Abstractions.IDistributedLockProvider
  parent: Cnblogs.Architecture.Ddd.Infrastructure.Abstractions
  href: Cnblogs.Architecture.Ddd.Infrastructure.Abstractions.IDistributedLockProvider.html
  name: IDistributedLockProvider
  nameWithType: IDistributedLockProvider
  fullName: Cnblogs.Architecture.Ddd.Infrastructure.Abstractions.IDistributedLockProvider
- uid: Microsoft.Extensions.Logging.ILogger{Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2}
  commentId: T:Microsoft.Extensions.Logging.ILogger{Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<LockableRequestBehavior<TRequest, TResponse>>
  nameWithType: ILogger<LockableRequestBehavior<TRequest, TResponse>>
  fullName: Microsoft.Extensions.Logging.ILogger<Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior<TRequest, TResponse>>
  nameWithType.vb: ILogger(Of LockableRequestBehavior(Of TRequest, TResponse))
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior(Of TRequest, TResponse))
  name.vb: ILogger(Of LockableRequestBehavior(Of TRequest, TResponse))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2
    name: LockableRequestBehavior
    href: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior-2.html
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2
    name: LockableRequestBehavior
    href: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: )
  - name: )
- uid: Cnblogs.Architecture.Ddd.Infrastructure.Abstractions
  commentId: N:Cnblogs.Architecture.Ddd.Infrastructure.Abstractions
  href: Cnblogs.html
  name: Cnblogs.Architecture.Ddd.Infrastructure.Abstractions
  nameWithType: Cnblogs.Architecture.Ddd.Infrastructure.Abstractions
  fullName: Cnblogs.Architecture.Ddd.Infrastructure.Abstractions
  spec.csharp:
  - uid: Cnblogs
    name: Cnblogs
    href: Cnblogs.html
  - name: .
  - uid: Cnblogs.Architecture
    name: Architecture
    href: Cnblogs.Architecture.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd
    name: Ddd
    href: Cnblogs.Architecture.Ddd.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd.Infrastructure
    name: Infrastructure
    href: Cnblogs.Architecture.Ddd.Infrastructure.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd.Infrastructure.Abstractions
    name: Abstractions
    href: Cnblogs.Architecture.Ddd.Infrastructure.Abstractions.html
  spec.vb:
  - uid: Cnblogs
    name: Cnblogs
    href: Cnblogs.html
  - name: .
  - uid: Cnblogs.Architecture
    name: Architecture
    href: Cnblogs.Architecture.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd
    name: Ddd
    href: Cnblogs.Architecture.Ddd.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd.Infrastructure
    name: Infrastructure
    href: Cnblogs.Architecture.Ddd.Infrastructure.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd.Infrastructure.Abstractions
    name: Abstractions
    href: Cnblogs.Architecture.Ddd.Infrastructure.Abstractions.html
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2.Handle*
  commentId: Overload:Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior`2.Handle
  href: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior-2.html#Cnblogs_Architecture_Ddd_Cqrs_Abstractions_LockableRequestBehavior_2_Handle__0_MediatR_RequestHandlerDelegate__1__System_Threading_CancellationToken_
  name: Handle
  nameWithType: LockableRequestBehavior<TRequest, TResponse>.Handle
  fullName: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior<TRequest, TResponse>.Handle
  nameWithType.vb: LockableRequestBehavior(Of TRequest, TResponse).Handle
  fullName.vb: Cnblogs.Architecture.Ddd.Cqrs.Abstractions.LockableRequestBehavior(Of TRequest, TResponse).Handle
- uid: MediatR.IPipelineBehavior{{TRequest},{TResponse}}.Handle({TRequest},MediatR.RequestHandlerDelegate{{TResponse}},System.Threading.CancellationToken)
  commentId: M:MediatR.IPipelineBehavior{`0,`1}.Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)
  parent: MediatR.IPipelineBehavior{{TRequest},{TResponse}}
  definition: MediatR.IPipelineBehavior`2.Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: Handle(TRequest, RequestHandlerDelegate<TResponse>, CancellationToken)
  nameWithType: IPipelineBehavior<TRequest, TResponse>.Handle(TRequest, RequestHandlerDelegate<TResponse>, CancellationToken)
  fullName: MediatR.IPipelineBehavior<TRequest, TResponse>.Handle(TRequest, MediatR.RequestHandlerDelegate<TResponse>, System.Threading.CancellationToken)
  nameWithType.vb: IPipelineBehavior(Of TRequest, TResponse).Handle(TRequest, RequestHandlerDelegate(Of TResponse), CancellationToken)
  fullName.vb: MediatR.IPipelineBehavior(Of TRequest, TResponse).Handle(TRequest, MediatR.RequestHandlerDelegate(Of TResponse), System.Threading.CancellationToken)
  name.vb: Handle(TRequest, RequestHandlerDelegate(Of TResponse), CancellationToken)
  spec.csharp:
  - uid: MediatR.IPipelineBehavior{`0,`1}.Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: MediatR.RequestHandlerDelegate`1
    name: RequestHandlerDelegate
    isExternal: true
  - name: <
  - name: TResponse
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MediatR.IPipelineBehavior{`0,`1}.Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: MediatR.RequestHandlerDelegate`1
    name: RequestHandlerDelegate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: '{TRequest}'
  commentId: '!:TRequest'
  definition: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: MediatR.RequestHandlerDelegate{{TResponse}}
  commentId: T:MediatR.RequestHandlerDelegate{`1}
  parent: MediatR
  definition: MediatR.RequestHandlerDelegate`1
  name: RequestHandlerDelegate<TResponse>
  nameWithType: RequestHandlerDelegate<TResponse>
  fullName: MediatR.RequestHandlerDelegate<TResponse>
  nameWithType.vb: RequestHandlerDelegate(Of TResponse)
  fullName.vb: MediatR.RequestHandlerDelegate(Of TResponse)
  name.vb: RequestHandlerDelegate(Of TResponse)
  spec.csharp:
  - uid: MediatR.RequestHandlerDelegate`1
    name: RequestHandlerDelegate
    isExternal: true
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: MediatR.RequestHandlerDelegate`1
    name: RequestHandlerDelegate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{TResponse}}
  commentId: T:System.Threading.Tasks.Task{`1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResponse>
  nameWithType: Task<TResponse>
  fullName: System.Threading.Tasks.Task<TResponse>
  nameWithType.vb: Task(Of TResponse)
  fullName.vb: System.Threading.Tasks.Task(Of TResponse)
  name.vb: Task(Of TResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: MediatR.IPipelineBehavior`2.Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)
  commentId: M:MediatR.IPipelineBehavior`2.Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: Handle(TRequest, RequestHandlerDelegate<TResponse>, CancellationToken)
  nameWithType: IPipelineBehavior<TRequest, TResponse>.Handle(TRequest, RequestHandlerDelegate<TResponse>, CancellationToken)
  fullName: MediatR.IPipelineBehavior<TRequest, TResponse>.Handle(TRequest, MediatR.RequestHandlerDelegate<TResponse>, System.Threading.CancellationToken)
  nameWithType.vb: IPipelineBehavior(Of TRequest, TResponse).Handle(TRequest, RequestHandlerDelegate(Of TResponse), CancellationToken)
  fullName.vb: MediatR.IPipelineBehavior(Of TRequest, TResponse).Handle(TRequest, MediatR.RequestHandlerDelegate(Of TResponse), System.Threading.CancellationToken)
  name.vb: Handle(TRequest, RequestHandlerDelegate(Of TResponse), CancellationToken)
  spec.csharp:
  - uid: MediatR.IPipelineBehavior`2.Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: MediatR.RequestHandlerDelegate`1
    name: RequestHandlerDelegate
    isExternal: true
  - name: <
  - name: TResponse
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MediatR.IPipelineBehavior`2.Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: MediatR.RequestHandlerDelegate`1
    name: RequestHandlerDelegate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: MediatR.RequestHandlerDelegate`1
  commentId: T:MediatR.RequestHandlerDelegate`1
  isExternal: true
  name: RequestHandlerDelegate<TResponse>
  nameWithType: RequestHandlerDelegate<TResponse>
  fullName: MediatR.RequestHandlerDelegate<TResponse>
  nameWithType.vb: RequestHandlerDelegate(Of TResponse)
  fullName.vb: MediatR.RequestHandlerDelegate(Of TResponse)
  name.vb: RequestHandlerDelegate(Of TResponse)
  spec.csharp:
  - uid: MediatR.RequestHandlerDelegate`1
    name: RequestHandlerDelegate
    isExternal: true
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: MediatR.RequestHandlerDelegate`1
    name: RequestHandlerDelegate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
