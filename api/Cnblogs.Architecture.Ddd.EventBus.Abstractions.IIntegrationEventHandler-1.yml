### YamlMime:ManagedReference
items:
- uid: Cnblogs.Architecture.Ddd.EventBus.Abstractions.IIntegrationEventHandler`1
  commentId: T:Cnblogs.Architecture.Ddd.EventBus.Abstractions.IIntegrationEventHandler`1
  id: IIntegrationEventHandler`1
  parent: Cnblogs.Architecture.Ddd.EventBus.Abstractions
  children: []
  langs:
  - csharp
  - vb
  name: IIntegrationEventHandler<TEvent>
  nameWithType: IIntegrationEventHandler<TEvent>
  fullName: Cnblogs.Architecture.Ddd.EventBus.Abstractions.IIntegrationEventHandler<TEvent>
  type: Interface
  source:
    remote:
      path: src/Cnblogs.Architecture.Ddd.EventBus.Abstractions/IIntegrationEventHandler.cs
      branch: add-docfx
      repo: https://github.com/cnblogs/Architecture.git
    id: IIntegrationEventHandler
    path: src/Cnblogs.Architecture.Ddd.EventBus.Abstractions/IIntegrationEventHandler.cs
    startLine: 8
  assemblies:
  - Cnblogs.Architecture.Ddd.EventBus.Abstractions
  namespace: Cnblogs.Architecture.Ddd.EventBus.Abstractions
  summary: 集成事件处理器。
  example: []
  syntax:
    content: 'public interface IIntegrationEventHandler<TEvent> : INotificationHandler<TEvent>, IEventBusRequestHandler where TEvent : IntegrationEvent'
    typeParameters:
    - id: TEvent
      description: 集成事件。
    content.vb: Public Interface IIntegrationEventHandler(Of TEvent As IntegrationEvent) Inherits INotificationHandler(Of TEvent), IEventBusRequestHandler
  inheritedMembers:
  - MediatR.INotificationHandler{{TEvent}}.Handle({TEvent},System.Threading.CancellationToken)
  nameWithType.vb: IIntegrationEventHandler(Of TEvent)
  fullName.vb: Cnblogs.Architecture.Ddd.EventBus.Abstractions.IIntegrationEventHandler(Of TEvent)
  name.vb: IIntegrationEventHandler(Of TEvent)
references:
- uid: Cnblogs.Architecture.Ddd.EventBus.Abstractions
  commentId: N:Cnblogs.Architecture.Ddd.EventBus.Abstractions
  href: Cnblogs.html
  name: Cnblogs.Architecture.Ddd.EventBus.Abstractions
  nameWithType: Cnblogs.Architecture.Ddd.EventBus.Abstractions
  fullName: Cnblogs.Architecture.Ddd.EventBus.Abstractions
  spec.csharp:
  - uid: Cnblogs
    name: Cnblogs
    href: Cnblogs.html
  - name: .
  - uid: Cnblogs.Architecture
    name: Architecture
    href: Cnblogs.Architecture.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd
    name: Ddd
    href: Cnblogs.Architecture.Ddd.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd.EventBus
    name: EventBus
    href: Cnblogs.Architecture.Ddd.EventBus.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd.EventBus.Abstractions
    name: Abstractions
    href: Cnblogs.Architecture.Ddd.EventBus.Abstractions.html
  spec.vb:
  - uid: Cnblogs
    name: Cnblogs
    href: Cnblogs.html
  - name: .
  - uid: Cnblogs.Architecture
    name: Architecture
    href: Cnblogs.Architecture.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd
    name: Ddd
    href: Cnblogs.Architecture.Ddd.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd.EventBus
    name: EventBus
    href: Cnblogs.Architecture.Ddd.EventBus.html
  - name: .
  - uid: Cnblogs.Architecture.Ddd.EventBus.Abstractions
    name: Abstractions
    href: Cnblogs.Architecture.Ddd.EventBus.Abstractions.html
- uid: MediatR.INotificationHandler{{TEvent}}.Handle({TEvent},System.Threading.CancellationToken)
  commentId: M:MediatR.INotificationHandler{`0}.Handle(`0,System.Threading.CancellationToken)
  parent: MediatR.INotificationHandler{{TEvent}}
  definition: MediatR.INotificationHandler`1.Handle(`0,System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: Handle(TEvent, CancellationToken)
  nameWithType: INotificationHandler<TEvent>.Handle(TEvent, CancellationToken)
  fullName: MediatR.INotificationHandler<TEvent>.Handle(TEvent, System.Threading.CancellationToken)
  nameWithType.vb: INotificationHandler(Of TEvent).Handle(TEvent, CancellationToken)
  fullName.vb: MediatR.INotificationHandler(Of TEvent).Handle(TEvent, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MediatR.INotificationHandler{`0}.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MediatR.INotificationHandler{`0}.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MediatR.INotificationHandler`1.Handle(`0,System.Threading.CancellationToken)
  commentId: M:MediatR.INotificationHandler`1.Handle(`0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: Handle(TNotification, CancellationToken)
  nameWithType: INotificationHandler<TNotification>.Handle(TNotification, CancellationToken)
  fullName: MediatR.INotificationHandler<TNotification>.Handle(TNotification, System.Threading.CancellationToken)
  nameWithType.vb: INotificationHandler(Of TNotification).Handle(TNotification, CancellationToken)
  fullName.vb: MediatR.INotificationHandler(Of TNotification).Handle(TNotification, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MediatR.INotificationHandler`1.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TNotification
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MediatR.INotificationHandler`1.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TNotification
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MediatR.INotificationHandler{{TEvent}}
  commentId: T:MediatR.INotificationHandler{`0}
  parent: MediatR
  definition: MediatR.INotificationHandler`1
  name: INotificationHandler<TEvent>
  nameWithType: INotificationHandler<TEvent>
  fullName: MediatR.INotificationHandler<TEvent>
  nameWithType.vb: INotificationHandler(Of TEvent)
  fullName.vb: MediatR.INotificationHandler(Of TEvent)
  name.vb: INotificationHandler(Of TEvent)
  spec.csharp:
  - uid: MediatR.INotificationHandler`1
    name: INotificationHandler
    isExternal: true
  - name: <
  - name: TEvent
  - name: '>'
  spec.vb:
  - uid: MediatR.INotificationHandler`1
    name: INotificationHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
- uid: MediatR.INotificationHandler`1
  commentId: T:MediatR.INotificationHandler`1
  isExternal: true
  name: INotificationHandler<TNotification>
  nameWithType: INotificationHandler<TNotification>
  fullName: MediatR.INotificationHandler<TNotification>
  nameWithType.vb: INotificationHandler(Of TNotification)
  fullName.vb: MediatR.INotificationHandler(Of TNotification)
  name.vb: INotificationHandler(Of TNotification)
  spec.csharp:
  - uid: MediatR.INotificationHandler`1
    name: INotificationHandler
    isExternal: true
  - name: <
  - name: TNotification
  - name: '>'
  spec.vb:
  - uid: MediatR.INotificationHandler`1
    name: INotificationHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TNotification
  - name: )
- uid: MediatR
  commentId: N:MediatR
  href: MediatR.html
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
